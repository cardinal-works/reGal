{
  "contractName": "AddressUtils",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility library of inline functions on addresses\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/ramtin/Desktop/reGal/client/contracts/utils/AddressUtils.sol\":\"AddressUtils\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ramtin/Desktop/reGal/client/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0xbe617a3bbea587e6bc4672cad9b434cb14256ad3091a7ee68190fb3989e929da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32462235e9b55185a5f32845e1d8445b72aa33fb937dbdca7a916bf60e7dfbf8\",\"dweb:/ipfs/QmTxhzTmC5n8L1yyyHT3u9jU47eRXXseZ3zFtjCZHzSwxo\"]}},\"version\":1}",
  "bytecode": "0x60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e5e927377c6228722e390a355342151148824c81c194b77a283443f39180180264736f6c63430008000033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e5e927377c6228722e390a355342151148824c81c194b77a283443f39180180264736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "120:922:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "120:922:10:-:0;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.0;\n\n\n/**\n * Utility library of inline functions on addresses\n */\nlibrary AddressUtils {\n\n  /**\n   * Returns whether the target address is a contract\n   * @dev This function will return false if invoked during the constructor of a contract,\n   *  as the code is not actually created until after the constructor finishes.\n   * @param addr address to check\n   * @return whether the target address is a contract\n   */\n  function isContract(address addr) internal view returns (bool) {\n    uint256 size;\n    // XXX Currently there is no better way to check if there is a contract in an address\n    // than to check the size of the code at that address.\n    // See https://ethereum.stackexchange.com/a/14016/36603\n    // for more details about how this works.\n    // TODO Check this again before the Serenity release, because all addresses will be\n    // contracts then.\n    assembly { size := extcodesize(addr) }  // solium-disable-line security/no-inline-assembly\n    return size > 0;\n  }\n\n}\n",
  "sourcePath": "/Users/ramtin/Desktop/reGal/client/contracts/utils/AddressUtils.sol",
  "ast": {
    "absolutePath": "/Users/ramtin/Desktop/reGal/client/contracts/utils/AddressUtils.sol",
    "exportedSymbols": {
      "AddressUtils": [
<<<<<<< HEAD
        2144
      ]
    },
    "id": 2145,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2125,
=======
        2028
      ]
    },
    "id": 2029,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2011,
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:10"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 2126,
          "nodeType": "StructuredDocumentation",
          "src": "60:59:10",
          "text": " Utility library of inline functions on addresses"
        },
        "fullyImplemented": true,
<<<<<<< HEAD
        "id": 2144,
        "linearizedBaseContracts": [
          2144
=======
        "id": 2028,
        "linearizedBaseContracts": [
          2028
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
        ],
        "name": "AddressUtils",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
<<<<<<< HEAD
              "id": 2142,
=======
              "id": 2026,
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
              "nodeType": "Block",
              "src": "534:505:10",
              "statements": [
                {
                  "assignments": [
<<<<<<< HEAD
                    2135
=======
                    2019
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 2135,
                      "mutability": "mutable",
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 2142,
                      "src": "540:12:10",
=======
                      "id": 2019,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 2026,
                      "src": "507:12:10",
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 2134,
=======
                        "id": 2018,
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "540:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 2136,
=======
                  "id": 2020,
                  "initialValue": null,
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
                  "nodeType": "VariableDeclarationStatement",
                  "src": "540:12:10"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "933:29:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "935:25:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "addr",
                              "nodeType": "YulIdentifier",
                              "src": "955:4:10"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "943:11:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "943:17:10"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "935:4:10"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
<<<<<<< HEAD
                      "declaration": 2129,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "955:4:10",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2135,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "935:4:10",
                      "valueSize": 1
                    }
                  ],
                  "id": 2137,
=======
                      "size": {
                        "declaration": 2019,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "902:4:10",
                        "valueSize": 1
                      }
                    },
                    {
                      "addr": {
                        "declaration": 2013,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "922:4:10",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 2021,
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
                  "nodeType": "InlineAssembly",
                  "src": "924:38:10"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
<<<<<<< HEAD
                    "id": 2140,
=======
                    "id": 2024,
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
<<<<<<< HEAD
                      "id": 2138,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2135,
                      "src": "1026:4:10",
=======
                      "argumentTypes": null,
                      "id": 2022,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2019,
                      "src": "993:4:10",
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
<<<<<<< HEAD
                      "id": 2139,
=======
                      "id": 2023,
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1033:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1026:8:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 2133,
                  "id": 2141,
=======
                  "functionReturnParameters": 2017,
                  "id": 2025,
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
                  "nodeType": "Return",
                  "src": "1019:15:10"
                }
              ]
            },
<<<<<<< HEAD
            "documentation": {
              "id": 2127,
              "nodeType": "StructuredDocumentation",
              "src": "146:322:10",
              "text": " Returns whether the target address is a contract\n @dev This function will return false if invoked during the constructor of a contract,\n  as the code is not actually created until after the constructor finishes.\n @param addr address to check\n @return whether the target address is a contract"
            },
            "id": 2143,
=======
            "documentation": "Returns whether the target address is a contract\n@dev This function will return false if invoked during the constructor of a contract,\n as the code is not actually created until after the constructor finishes.\n@param addr address to check\n@return whether the target address is a contract",
            "id": 2027,
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 2130,
=======
              "id": 2014,
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2129,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 2143,
                  "src": "491:12:10",
=======
                  "id": 2013,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 2027,
                  "src": "458:12:10",
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2128,
=======
                    "id": 2012,
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "490:14:10"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 2133,
=======
              "id": 2017,
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2132,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2143,
                  "src": "528:4:10",
=======
                  "id": 2016,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2027,
                  "src": "495:4:10",
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2131,
=======
                    "id": 2015,
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "527:6:10"
            },
<<<<<<< HEAD
            "scope": 2144,
            "src": "471:568:10",
=======
            "scope": 2028,
            "src": "438:568:10",
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 2145,
        "src": "120:922:10"
=======
        "scope": 2029,
        "src": "87:922:10"
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
      }
    ],
    "src": "33:1010:10"
  },
  "legacyAST": {
<<<<<<< HEAD
    "absolutePath": "/Users/ramtin/Desktop/reGal/client/contracts/utils/AddressUtils.sol",
    "exportedSymbols": {
      "AddressUtils": [
        2144
      ]
=======
    "attributes": {
      "absolutePath": "/Users/ramtin/Desktop/reGal/client/contracts/utils/AddressUtils.sol",
      "exportedSymbols": {
        "AddressUtils": [
          2028
        ]
      }
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
    },
    "id": 2145,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
<<<<<<< HEAD
        "id": 2125,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:10"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 2126,
          "nodeType": "StructuredDocumentation",
          "src": "60:59:10",
          "text": " Utility library of inline functions on addresses"
=======
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".16"
          ]
        },
        "id": 2011,
        "name": "PragmaDirective",
        "src": "0:24:10"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "library",
          "documentation": "Utility library of inline functions on addresses",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            2028
          ],
          "name": "AddressUtils",
          "scope": 2029
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
        },
        "fullyImplemented": true,
        "id": 2144,
        "linearizedBaseContracts": [
          2144
        ],
        "name": "AddressUtils",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
<<<<<<< HEAD
            "body": {
              "id": 2142,
              "nodeType": "Block",
              "src": "534:505:10",
              "statements": [
                {
                  "assignments": [
                    2135
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2135,
                      "mutability": "mutable",
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 2142,
                      "src": "540:12:10",
=======
            "attributes": {
              "documentation": "Returns whether the target address is a contract\n@dev This function will return false if invoked during the constructor of a contract,\n as the code is not actually created until after the constructor finishes.\n@param addr address to check\n@return whether the target address is a contract",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "isContract",
              "scope": 2028,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "addr",
                      "scope": 2027,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2012,
                        "name": "ElementaryTypeName",
                        "src": "458:7:10"
                      }
                    ],
                    "id": 2013,
                    "name": "VariableDeclaration",
                    "src": "458:12:10"
                  }
                ],
                "id": 2014,
                "name": "ParameterList",
                "src": "457:14:10"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 2027,
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2134,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "540:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
<<<<<<< HEAD
                    }
                  ],
                  "id": 2136,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "540:12:10"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "933:29:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "935:25:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "addr",
                              "nodeType": "YulIdentifier",
                              "src": "955:4:10"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "943:11:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "943:17:10"
=======
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 2015,
                        "name": "ElementaryTypeName",
                        "src": "495:4:10"
                      }
                    ],
                    "id": 2016,
                    "name": "VariableDeclaration",
                    "src": "495:4:10"
                  }
                ],
                "id": 2017,
                "name": "ParameterList",
                "src": "494:6:10"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        2019
                      ],
                      "initialValue": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "size",
                          "scope": 2026,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
                        },
                        "variableNames": [
                          {
<<<<<<< HEAD
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "935:4:10"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2129,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "955:4:10",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2135,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "935:4:10",
                      "valueSize": 1
                    }
                  ],
                  "id": 2137,
                  "nodeType": "InlineAssembly",
                  "src": "924:38:10"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2138,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2135,
                      "src": "1026:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1033:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1026:8:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2133,
                  "id": 2141,
                  "nodeType": "Return",
                  "src": "1019:15:10"
                }
              ]
            },
            "documentation": {
              "id": 2127,
              "nodeType": "StructuredDocumentation",
              "src": "146:322:10",
              "text": " Returns whether the target address is a contract\n @dev This function will return false if invoked during the constructor of a contract,\n  as the code is not actually created until after the constructor finishes.\n @param addr address to check\n @return whether the target address is a contract"
            },
            "id": 2143,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2129,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 2143,
                  "src": "491:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "490:14:10"
            },
            "returnParameters": {
              "id": 2133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2132,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2143,
                  "src": "528:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2131,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "527:6:10"
            },
            "scope": 2144,
            "src": "471:568:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2145,
        "src": "120:922:10"
      }
    ],
    "src": "33:1010:10"
=======
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 2018,
                            "name": "ElementaryTypeName",
                            "src": "507:7:10"
                          }
                        ],
                        "id": 2019,
                        "name": "VariableDeclaration",
                        "src": "507:12:10"
                      }
                    ],
                    "id": 2020,
                    "name": "VariableDeclarationStatement",
                    "src": "507:12:10"
                  },
                  {
                    "attributes": {
                      "externalReferences": [
                        {
                          "size": {
                            "declaration": 2019,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "902:4:10",
                            "valueSize": 1
                          }
                        },
                        {
                          "addr": {
                            "declaration": 2013,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "922:4:10",
                            "valueSize": 1
                          }
                        }
                      ],
                      "operations": "{ size := extcodesize(addr) }"
                    },
                    "children": [],
                    "id": 2021,
                    "name": "InlineAssembly",
                    "src": "891:38:10"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 2017
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": ">",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2019,
                              "type": "uint256",
                              "value": "size"
                            },
                            "id": 2022,
                            "name": "Identifier",
                            "src": "993:4:10"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 2023,
                            "name": "Literal",
                            "src": "1000:1:10"
                          }
                        ],
                        "id": 2024,
                        "name": "BinaryOperation",
                        "src": "993:8:10"
                      }
                    ],
                    "id": 2025,
                    "name": "Return",
                    "src": "986:15:10"
                  }
                ],
                "id": 2026,
                "name": "Block",
                "src": "501:505:10"
              }
            ],
            "id": 2027,
            "name": "FunctionDefinition",
            "src": "438:568:10"
          }
        ],
        "id": 2028,
        "name": "ContractDefinition",
        "src": "87:922:10"
      }
    ],
    "id": 2029,
    "name": "SourceUnit",
    "src": "0:1010:10"
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
<<<<<<< HEAD
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-05-22T20:49:04.221Z",
=======
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-05-19T02:39:39.180Z",
>>>>>>> abc2a4d7b3ded9be8eb35df33ad2862d638010e2
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Utility library of inline functions on addresses",
    "version": 1
  }
}